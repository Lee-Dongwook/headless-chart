---
import { getCollection } from "astro:content";

  function resolveSlug(slug: string) {
    const segments = slug.split("/");
    const cleanedSegments = segments.map((segment) =>
      segment.replace(/^\d+\.?/, ""),
    );
    return cleanedSegments.join("/");
  }

const charts = await getCollection("charts");
const sortedCharts = charts
  .sort((a, b) => a.slug.localeCompare(b.slug))
  .map((entry) => ({  ...entry,
    slug: resolveSlug(entry.slug),
  }))
  .map((entry) => {
    const segments = entry.slug.split("/");
    return {
      ...entry,
      slug: segments.map((segment) => segment.replace(/^\d+./, "")).join("/"),
      order: parseInt(segments[1].split("_")[0]) || 0,
      nav_group: entry.data.nav_group || "Others",
    };
  });

// Group tutorials by nav_group and filter by language
const { currentSlug } = Astro.props;

const groupedTutorials = sortedCharts.reduce(
  (acc, tutorial) => {
    const group = tutorial.nav_group;
    if (!acc[group]) {
      acc[group] = [];
    }
    acc[group].push(tutorial);
    return acc;
  },
  {} as Record<string, typeof sortedCharts>,
);


---

<div class="p-3 text-sm">
  {
    Object.entries(groupedTutorials).map(([group, tutorials]) => (
      <div class="mb-6">
        <h3 class="mb-2 text-[16px] font-medium text-[rgb(75,85,99)]">
          {group}
        </h3>
        <ul class="space-y-2.5">
          {tutorials.map((tutorial) => (
            <li>
              <a
                href={`/charts/${tutorial.slug}`}
                class:list={[
                  "block rounded px-2 py-1.5 text-[14px] transition-colors",
                  currentSlug === tutorial.slug
                    ? "bg-gray-800 font-medium text-[rgb(209,213,219)]"
                    : "text-[rgb(156,163,175)] hover:text-[rgb(209,213,219)]",
                ]}
              >
                {tutorial.data.title}
              </a>
            </li>
          ))}
        </ul>
      </div>
    ))
  }
</div>
